server:
  port: 8080
spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
    format:
      date: yyyy-MM-dd HH:mm:ss
  # 应用名称
  application:
    name: LabApplication
  # 文件上传限制
  servlet:
    multipart:
      max-request-size: 100MB
      max-file-size: 100MB
  jackson:
    # 返回格式化日期
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  # mysql配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/lab?serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true
    username: <USERNAME>
    password: <PASSWORD>
    druid:
      # 初始连接数
      initial-size: 10
      # 最小连接池数量
      min-idle: 10
      # 最大连接池数量
      max-active: 150
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 600000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      max-evictable-idle-time-millis: 900000
      # 配置检测连接是否有效
      validation-query: SELECT 1 FROM DUAL
      # 配置检测连接是否有效时间
      validation-query-timeout: 500
      # 在获取连接后，确定是否要进行连接空间时间的检查
      test-while-idle: true
      # 设置从连接池获取连接时是否检查连接有效性，true检查，false不检查
      test-on-borrow: false
      # 设置从连接池归还连接时是否检查连接有效性，true检查，false不检查
      test-on-return: false
  # redis配置
  data:
    redis:
      # Redis服务器地址
      host: <REDIS_HOST>
      port: 6379
      # Redis服务器连接密码（默认为空）
      password: <REDIS_PASSWORD>
      # 连接超时时间
      timeout: 10s
      lettuce:
        pool:
          # 连接池最大连接数
          max-active: 150
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: 5000ms
          # 连接池中的最大空闲连接
          max-idle: 100
          # 连接池中的最小空闲连接
          min-idle: 50
  # 邮箱配置
  mail:
    host: smtp.qq.com
    port: 465
    username: <EMAIL>
    password: <EMAIL_PASSWORD>
    test-connection: true
    properties:
      mail:
        smtp:
          socketFactory:
            port: 465
            class: javax.net.ssl.SSLSocketFactory
          ssl:
            enable: true
# mybatisPlus配置
mybatis-plus:
  # mapper映射地址
  mapper-locations: classpath:mapper/*.xml
  # 实体类扫描包路径
  type-aliases-package: club.xdzn.lab.model.po
  configuration:
    # sql打印
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 开启驼峰命名
    map-underscore-to-camel-case: true
# sa-token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: authorization
  # token有效期，单位s 默认7天, -1代表永不过期
  timeout: 604800
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  # 这里方便测试设置为-1，实际生产时不允许
  active-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格（uuid，去除横线）
  token-style: simple-uuid
  #  读取请求头中的token
  isReadHeader: true
  #  取消cookie
  isReadCookie: false
# 线程池配置
thread:
  pool:
    core-pool-size: 5
    max-pool-size: 10
    queue-capacity: 50
    keep-alive-seconds: 60
# minio
minio:
  url: <MINIO_URL>
  access-key: <MINIO_ACCESS_KEY>
  secret-key: <MINIO_SECRET_KEY>
  bucket-name: <MINIO_BUCKET_NAME>
# springdoc-openapi
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: '基于springboot的虚动智能实验室系统'
      paths-to-match: '/**'
      packages-to-scan: club.xdzn.lab.controller
# knife4j
knife4j:
  enable: true
  setting:
    language: zh_cn
logging:
  level:
    club.xdzn.lab: debug